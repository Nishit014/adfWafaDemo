{
	"name": "window",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "emp3",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outData",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "outData",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "window1"
				},
				{
					"name": "window2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          name as string,",
				"          gender as string,",
				"          country as string,",
				"          salary as integer,",
				"          department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 window(over(department),",
				"     asc(salary, true),",
				"     avgSalary = avg(salary)) ~> window1",
				"source1 window(over(department),",
				"     desc(salary, true),",
				"     denseRank = denseRank()) ~> window2",
				"window1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['window'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"window2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['denseRank'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}