{
	"name": "pivot_surrogate",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "emp2",
						"type": "DatasetReference"
					},
					"name": "emp"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outData",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "outData",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "pivot1"
				},
				{
					"name": "surrogateKey1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          name as string,",
				"          gender as string,",
				"          country as string,",
				"          department as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> emp",
				"emp pivot(groupBy(department),",
				"     pivotBy(gender),",
				"     totalEmp = count(id),",
				"     columnNaming: 'total_$N$V_emp',",
				"     lateral: true) ~> pivot1",
				"emp keyGenerate(output(SurrogateId as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"pivot1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['pivot'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"surrogateKey1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['surrogate'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}